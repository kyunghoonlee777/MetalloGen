import numpy as np

metal_z_list = list(range(3,5)) + list(range(11,14)) + list(range(19,32)) + list(range(37,51)) + list(range(55,84)) + list(range(87,113))
transition_metal_z_list = list(range(21,31)) + list(range(39,49)) + list(range(72,81)) + list(range(104,113))

metal = [
    'Li','Be',
    'Na','Mg','Al',
    'K' ,'Ca','Sc','Ti','V' ,'Cr','Mn','Fe','Co','Ni','Cu','Zn','Ga',
    'Rb','Sr','Y' ,'Zr','Nb','Mo','Tc','Ru','Rh','Pd','Ag','Cd','In','Sn',
    'Cs','Ba','La','Ce','Pr','Nd','Pm','Sm','Eu','Gd','Tb','Dy','Ho','Er','Tm','Yb','Lu',
              'Hf','Ta','W' ,'Re','Os','Ir','Pt','Au','Hg','Tl','Pb','Bi',
    'Fr','Ra','Ac','Th','Pa','U' ,'Np','Pu','Am','Cm','Bk','Cf','Es','Fm','Md','No','Lr',
              'Rf','Db','Sg','Bh','Hs','Mt','Ds','Rg','Cn','Nh','Fl','Mc','Lv',
]

transition_metal = [
    'Sc','Ti','V' ,'Cr','Mn','Fe','Co','Ni','Cu','Zn',\
    'Y' ,'Zr','Nb','Mo','Tc','Ru','Rh','Pd','Ag','Cd',\
    'La','Ce','Pr','Nd','Pm','Sm','Eu','Gd','Tb','Dy','Ho','Er','Tm','Yb','Lu',\
    'Hf','Ta','W' ,'Re','Os','Ir','Pt','Au','Hg',\
    'Ac','Th','Pa','U' ,'Np','Pu','Am','Cm','Bk','Cf','Es','Fm','Md','No','Lr',\
    'Rf','Db','Sg','Bh','Hs','Mt','Ds','Rg','Cn',
]

lanthanide_metal = ['La','Ce','Pr','Nd','Pm','Sm','Eu','Gd','Tb','Dy','Ho','Er','Tm','Yb','Lu']

actinide_metal = ['Ac','Th','Pa','U' ,'Np','Pu','Am','Cm','Bk','Cf','Es','Fm','Md','No','Lr']

CN_known_geometries_dict = {
    2:  ['2_linear', '2_bent_135', '2_bent_90'],
    3:  ['3_trigonal_planar', '3_trigonal_pyramidal', '3_t_shaped'],
    4:  ['4_tetrahedral', '4_seesaw', '4_square_planar'],
    5:  ['5_trigonal_bipyramidal', '5_square_pyramidal', '5_pentagonal_planar'],
    6:  ['6_octahedral', '6_trigonal_prismatic', '6_pentagonal_pyramidal', '6_hexagonal_planar'],
    7:  ['7_pentagonal_bipyramidal', '7_hexagonal_pyramidal', '7_capped_trigonal_prismatic', '7_capped_octahedral'],
    8:  ['8_squre_antiprismatic', '8_sqaure_prismatic', '8_bicapped_trigonal_prismatic', '8_hexagonal_bipyramidal', '8_dodecahedral'],
    9:  ['9_capped_square_antiprismatic', '9_tricapped_trigonal_prismatic', '9_tri_tri_mer_capped'],
    10: ['10_axial_bicapped_hexagonal_planar',],
    11: [],
    12: ['12_penta_bi_capped_pyramidal'],
}

known_geometries_angle_dict = {
    # CN = 2
    '2_linear'  : [180.0],
    '2_bent_135': [135.0],
    '2_bent_90' : [90.0],
    # CN = 3
    '3_trigonal_planar'   : [110.0, 125.0, 125.0],
    '3_trigonal_pyramidal': [109.0, 109.0, 109.0],
    '3_t_shaped'          : [90.0, 90.0, 180.0],
    # CN = 4
    '4_tetrahedral'  : [109.5, 109.5, 109.5, 109.5, 109.5, 109.5],
    '4_square_planar': [90.0, 90.0, 90.0, 90.0, 180.0, 180.0],
    '4_seesaw'       : [90.0, 90.0, 90.0, 90.0, 90.0, 180.0],
    # CN = 5
    '5_trigonal_bipyramidal': [90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 110.0, 125.0, 125.0, 180.0],
    '5_square_pyramidal'    : [90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 180.0, 180.0],
    '5_pentagonal_planar'   : [72.0, 72.0, 72.0, 72.0, 72.0, 144.0, 144.0, 144.0, 144.0, 144.0],
    # CN = 6
    '6_octahedral'          : [90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 180.0, 180.0, 180.0],
    '6_trigonal_prismatic'  : [82.0, 82.0, 82.0, 82.0, 82.0, 82.0, 82.0, 82.0, 82.0, 136.0, 136.0, 136.0, 136.0, 136.0, 136.0],
    '6_pentagonal_pyramidal': [72.0, 72.0, 72.0, 72.0, 72.0, 90.0, 90.0, 90.0, 90.0, 90.0, 144.0, 144.0, 144.0, 144.0, 144.0],
    '6_hexagonal_planar'    : [59.0, 59.0, 61.0, 61.0, 61.0, 61.0, 119.0, 119.0, 119.0, 119.0, 121.0, 121.0, 180.0, 180.0, 180.0],
    # CN = 7
    '7_pentagonal_bipyramidal'   : [72.0, 72.0, 72.0, 72.0, 72.0, 90,0, 90,0, 90,0, 90,0, 90,0, 90,0, 90,0, 90,0, 90,0, 90,0, 144.0, 144.0, 144.0, 144.0, 144.0, 180,0],
    '7_hexagonal_pyramidal'      : [59.0, 59.0, 61.0, 61.0, 61.0, 61.0, 85.0, 85.0, 85.0, 95.0, 95.0, 95.0, 119.0, 119.0, 119,0, 119.0, 121.0, 121.0, 180.0, 180.0, 180.0],
    '7_capped_octahedral'        : [55.0, 55.0, 55.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 90.0, 125.0, 125.0, 125.0, 180.0, 180.0, 180.0],
    '7_capped_trigonal_prismatic': [68.0, 68.0, 68.0, 68.0, 81.8, 81.8, 81.8, 81.8,81.8, 81.8, 81.8, 81.8, 81.8, 135.5, 135.5, 135.5, 135.5, 135.5, 135.5, 139.0, 139.0],
    # CN = 8
    '8_squre_antiprismatic'        : [70.5, 70.5, 70.5, 70.5, 70.5, 70.5, 70.5, 70.5, 82.0, 82.0, 82.0, 82.0, 82.0, 82.0, 82.0, 82.0, 109.3, 109.3, 109.5, 109.5, 143.6, 143.6, 143.6, 143.6, 143.6, 143.6, 143.6, 143.6],
    '8_sqaure_prismatic'           : [70.5, 70.5,70.5, 70.5, 70.5, 70.5, 70.5, 70.5, 70.5, 70.5, 70.5, 70.5, 109.5, 109.5, 109.5, 109.5, 109.5, 109.5, 109.5, 109.5, 109.5, 109.5, 109.5, 109.5, 180.0, 180.0, 180.0, 180.0],
    '8_bicapped_trigonal_prismatic': [63.9, 63.9, 67.8, 67.8, 67.8, 67.8, 71.8, 71.8, 81.8, 81.8, 81.8, 81.8, 81.8, 81.8, 81.8, 81.8, 81.8, 125.6, 135.6, 135.6, 135.6, 135.6, 135.6, 135.6, 138.8, 138.8, 139.0, 139.0],
    '8_hexagonal_bipyramidal'      : [58.8, 58.8, 61.0, 61.0, 61.0, 61.0, 82.4, 82.4, 84.4, 84.4, 86.4, 86.4, 93.6, 93.6, 95.6, 95.6, 97.6, 97.6, 119.0, 119.0, 119.0, 119.0, 121.2, 121,2, 180.0, 180.0, 180.0, 180.0],
    '8_dodecahedral'               : [65.0, 65.0, 75.2, 75.2, 75.2, 75.2, 75.2, 75.2, 75.2, 75.2, 75.2, 75.2, 75.2, 75.2, 95.3, 95.3, 95.3, 95.3, 135.3, 135.3, 135.3, 135.3, 140.2, 140.2, 140.2, 140.2, 144.6, 144.6],
    # CN = 9
    '9_capped_square_antiprismatic' : [54.7, 54.7, 54.7, 54.7, 70.5, 70.5, 70.5, 70.5, 70.5, 70.5, 70.5, 70.5, 82.1, 82.1, 82.1, 82.1, 82.1, 82.1, 82.1, 82.1, 109.5, 109.5, 109.5, 109.5, 125.3, 125.3, 125.3, 125.3, 143.6, 143.6, 143.6, 143.6, 143.6, 143.6, 143.6, 143.6,],
    '9_tricapped_trigonal_prismatic': [63.9, 63.9, 63.9, 63.9, 67.8, 67.8, 67.8, 67.8, 71.8, 71.8, 71.8, 71.8, 81.8, 81.8, 81.8, 81.8, 81.8, 81.8, 81.8, 81.8, 81.8, 108.8, 125.6, 125.6, 135.6, 135.6, 135.6, 135.6, 135.6, 135.6, 138.8, 138.8, 138.8, 138.8, 139.1, 139.1],
    '9_tri_tri_mer_capped'          : [61.1, 61.2, 61.5, 61.6, 62.0, 62.0, 73.3, 74.5, 75.5, 76.6, 77.3, 77.3, 77.9, 78.2, 78.3, 78.6, 78.9, 79.0, 88.4, 89.7, 89.8, 117.4, 119.8, 122.4, 122.8, 123.2, 123.5, 133.0, 134.7, 134.8, 135.5, 136.7, 137.4, 152.1, 152.4, 153.9],
    # CN = 10
    '10_axial_bicapped_hexagonal_planar': [52.5, 52.5, 52.5, 52.5, 52.5, 67.3, 67.3, 69.7, 69.7, 72.7, 72.7, 72.7, 72.7, 75.2, 75.2, 75.2, 75.2, 76.3, 77.5, 77.5, 81.2, 81.2, 92.1, 92.1, 108.2, 108.2, 109.0, 109.0, 116.1, 116.1, 119.8, 119.7, 124.1, 124.1, 124.6, 124.6, 126.3, 126.3, 138.9, 142.2, 142.2, 149.4, 156.2, 156.2, 176.5],
    # CN = 11
    # CN = 12
    '12_penta_bi_capped_pyramidal': [46.9, 46.9, 48.0, 48.0, 48.7, 64.3, 64.3, 65.5, 65.5, 65.5, 65.5, 66.5, 66.5, 66.5, 66.5, 66.6, 66.6, 66.6, 66.6, 66.7, 66.7, 68.0, 68.0, 68.0, 68.0, 68.0, 68.0, 71.6, 71.6, 72.3, 97.2, 99.5, 99.5, 99.9, 99.9, 108.4, 108.4, 111.9, 111.9, 111.9, 111.9, 113.5, 113.5, 113.5, 113.5, 120.8, 120.8, 123.4, 123.4, 124.8, 124.8, 125.1, 125.1, 125.3, 125.3, 126.9, 129.0, 129.0, 129.6, 129.6, 163.7, 163.7, 164.9, 164.9, 165.5, 179.8],
}

known_geometries_vector_dict = {
    #### CN 2
    '2_linear': np.array([[0,0,1],[0,0,-1]]),
    '2_bent_135': np.array([[0,0,1],[0,1/np.sqrt(2),-1/np.sqrt(2)]]),
    '2_bent_90': np.array([[0,0,1],[0,1,0]]),
    #### CN 3
    '3_trigonal_planar': np.array([[2,0,0],[-1,np.sqrt(3),0],[-1,-np.sqrt(3),0]])/2,
    '3_trigonal_pyramidal': np.array([[1,-1,-1],[-1,1,-1],[-1,-1,1]]/np.sqrt(3)),
    '3_t_shaped': np.array([[0,0,1],[0,1,0],[0,0,-1]]),
    #### CN 4
    '4_tetrahedral': np.array([[1,1,1],[1,-1,-1],[-1,1,-1],[-1,-1,1]]/np.sqrt(3)),
    '4_square_planar': np.array([[1,0,0],[-1,0,0],[0,1,0],[0,-1,0]]),
    '4_seesaw': np.array([[0,0,1],[0,0,-1],[1,0,0],[0,1,0]]),
    #### CN 5
    '5_trigonal_bipyramidal': np.array([[0,0,2],[0,0,-2],[2,0,0],[-1,np.sqrt(3),0],[-1,-np.sqrt(3),0]])/2,
    '5_square_pyramidal': np.array([[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1]]),
    '5_pentagonal_planar': np.array([[1,0,0],[np.cos(2*np.pi/5),np.sin(2*np.pi/5),0],[np.cos(4*np.pi/5),np.sin(4*np.pi/5),0],[np.cos(6*np.pi/5),np.sin(6*np.pi/5),0],[np.cos(8*np.pi/5),np.sin(8*np.pi/5),0]]),
    #### CN 6
    '6_octahedral': np.array([[0,0,1],[0,0,-1],[0,1,0],[0,-1,0],[1,0,0],[-1,0,0]]),
    '6_pentagonal_pyramidal': np.array([[0,0,1],[1,0,0],[np.cos(2*np.pi/5),np.sin(2*np.pi/5),0],[np.cos(4*np.pi/5),np.sin(4*np.pi/5),0],[np.cos(6*np.pi/5),np.sin(6*np.pi/5),0],[np.cos(8*np.pi/5),np.sin(8*np.pi/5),0]]),
    '6_trigonal_prismatic': np.array([[1.511, 0.0, 1.31],[-0.756, 1.309, 1.309],[-0.756, -1.309, 1.309],[1.511, 0.0, -1.31],[-0.756, 1.309, -1.309],[-0.756, -1.309, -1.309]])/2,
    '6_hexagonal_planar': np.array([[1,0,0],[np.cos(2*np.pi/6),np.sin(2*np.pi/6),0],[np.cos(4*np.pi/6),np.sin(4*np.pi/6),0],[np.cos(6*np.pi/6),np.sin(6*np.pi/6),0],[np.cos(8*np.pi/6),np.sin(8*np.pi/6),0],[np.cos(10*np.pi/6),np.sin(10*np.pi/6),0]]),
    #### CN 7
    '7_pentagonal_bipyramidal': np.array([[0,0,1],[0,0,-1],[1,0,0],[np.cos(2*np.pi/5),np.sin(2*np.pi/5),0],[np.cos(4*np.pi/5),np.sin(4*np.pi/5),0],[np.cos(6*np.pi/5),np.sin(6*np.pi/5),0],[np.cos(8*np.pi/5),np.sin(8*np.pi/5),0]]),
    '7_capped_trigonal_prismatic': np.array([[1.511, 0.0, 1.31],[-0.756, 1.309, 1.309],[-0.756, -1.309, 1.309],[1.511, 0.0, -1.31],[-0.756, 1.309, -1.309],[-0.756, -1.309, -1.309],[-2.0, 0.0, 0.0]])/2,
    '7_capped_octahedral': np.array([[0,0,2],[0,0,2],[0,2,0],[0,-2,0],[2,0,0],[-2,0,0],[1.155,1.155,1.155]])/2,
    '7_hexagonal_pyramidal': np.array([[0,0,1],[1,0,0],[np.cos(2*np.pi/6),np.sin(2*np.pi/6),0],[np.cos(4*np.pi/6),np.sin(4*np.pi/6),0],[np.cos(6*np.pi/6),np.sin(6*np.pi/6),0],[np.cos(8*np.pi/6),np.sin(8*np.pi/6),0],[np.cos(10*np.pi/6),np.sin(10*np.pi/6),0]]),
    #### CN 8
    '8_squre_antiprismatic': np.array([[-1, 1, 1],[1, 1, 1],[-1, -1, 1],[1, -1, 1],[-1.41, 0, -1],[0, -1.41, -1],[1.41, 0, -1],[0, 1.41, -1]])/np.sqrt(3),
    '8_sqaure_prismatic': np.array([[-1, 1, 1],[1, 1, 1],[-1, -1, 1],[1, -1, 1],[-1, 1, -1],[-1, -1, -1],[1, -1, -1],[1, 1, -1]])/np.sqrt(3),
    '8_bicapped_trigonal_prismatic': np.array([[1.511, 0.0, 1.31],[-0.756, 1.309, 1.309],[-0.756, -1.309, 1.309],[1.511, 0.0, -1.31],[-0.756, 1.309, -1.309],[-0.756, -1.309, -1.309],[-2.0, 0.0, 0.0],[1.16, -1.62, 0],[1.16, 1.62, 0]])/2,
    '8_hexagonal_bipyramidal': np.array([[0,0,1],[0,0,-1],[1,0,0],[np.cos(2*np.pi/6),np.sin(2*np.pi/6),0],[np.cos(4*np.pi/6),np.sin(4*np.pi/6),0],[np.cos(6*np.pi/6),np.sin(6*np.pi/6),0],[np.cos(8*np.pi/6),np.sin(8*np.pi/6),0],[np.cos(10*np.pi/6),np.sin(10*np.pi/6),0]]),
    '8_dodecahedral': np.array([[1.289, 0.411, 0],[-1.289, 0.411, 0],[0, -0.411, 1.289],[0, -0.411, -1.289],[1, -1.568, 0],[-1, -1.568, 0],[0, 1.568, 1],[0, 1.568, -1]]),
    '8_axial_bicapped_trigonal_prismatic': np.array([[-0.77660752, 0.7455247, 1.68554848],[0.84666207, -0.75727505, -1.64611599],[-1.89364682, 0.64292567, -0.02735548],[-1.1421033, -0.44716888, -1.57975949],[-0.05187737, -1.12955356, 1.64967193],[1.08122157, -1.67863101, 0.11470761],[0.73916493, 1.67714792, 0.80050613],[1.25857889, 1.12625782, -1.07122477]])/2,
    #### CN 9
    '9_capped_square_antiprismatic': np.array([[-1, 1, 1], [1, 1, 1], [-1, -1, 1], [1, -1, 1], [-1.41, 0, -1], [0, -1.41, -1], [1.41, 0, -1], [0, 1.41, -1], [0, 0, 1.73]]),
    '9_tricapped_trigonal_prismatic': np.array([[1.511, 0.0, 1.31], [-0.756, 1.309, 1.309], [-0.756, -1.309, 1.309], [1.511, 0.0, -1.31], [-0.756, 1.309, -1.309], [-0.756, -1.309, -1.309], [-2.0, 0.0, 0.0], [1.16, -1.62, 0], [1.16, 1.62, 0]]),
    '9_tri_tri_mer_capped': np.array([
        [-0.32238184,  0.16659695, -1.96680335],
        [ 1.82278439, -0.47604810,  0.67144270],
        [-1.55384060,  0.32203597,  1.21732174],
        [-1.56677590, -0.94884186, -0.80306439],
        [ 1.26907643,  1.11747728, -1.06803068],
        [ 0.88550201, -1.62631150, -0.75564351],
        [ 0.83666247,  1.16758890,  1.39166521],
        [-0.41252724, -1.36401551,  1.40331143],
        [-0.99299587,  1.73068560, -0.13669874]
    ]),
    #### CN 10
    '10_axial_bicapped_hexagonal_planar': np.array([
        [-1.86281576,  0.06020958, -0.72546002], # 0,1 trans
        [ 1.86281576,  0.06020958,  0.72546002],
        [-0.65427417, -1.79359695, -0.59576447],
        [-1.23433283,  1.57281414, -0.05175061],
        [-0.00766799,  0.70251884,  1.87254065],
        [-1.23148994, -0.52774663,  1.48489596],
        [ 0.65420987, -1.79364224,  0.59569870],
        [ 1.23433412,  1.57281579,  0.05166980],
        [ 0.00758642,  0.70251895, -1.87254094],
        [ 1.23140247, -0.52774392, -1.48496947]
    ]),
    #### CN 12
    '12_penta_bi_capped_pyramidal': np.array([
        [ 1.94669217, -0.00263606,  0.45867487], #0,1 trans
        [-1.94669638, -0.00263596, -0.45865703],
        [ 0.80732904, -1.82239409, -0.16461956],
        [ 1.04605529, -0.25227919, -1.68585988],
        [-0.41002572, -0.89431687, -1.74128580],
        [-0.42780953,  1.32200287, -1.43850100],
        [ 0.97354769,  1.61530666, -0.66557439],
        [-0.80732904, -1.82239409,  0.16461956],
        [-1.04614067, -0.25228214,  1.68580646],
        [ 0.41002572, -0.89431687,  1.74128580],
        [ 0.42774741,  1.32205074,  1.43847627],
        [-0.97360413,  1.61527759,  0.66556241]
    ]),
}

known_geometries_permutation_dict = {
    #### CN 2
    '2_linear': [],
    '2_bent_135': [],
    '2_bent_90': [],
    #### CN 3
    '3_trigonal_planar': [],
    '3_trigonal_pyramidal': [],
    '3_t_shaped': [(1,2,3), (2,1,3)],
    #### CN 4
    '4_tetrahedral': [(1,2,3,4), (2,1,3,4)],
    '4_square_planar': [(1,2,3,4), (1,3,2,4), (1,4,2,3)],
    '4_seesaw': [(1,2,3,4), (1,2,4,3), (1,3,2,4), (1,3,4,2), (1,4,2,3), (1,4,3,2), (2,3,1,4), (2,3,4,1), (2,4,1,3), (2,4,3,1), (3,4,1,2), (3,4,2,1)],
    #### CN 5
    '5_trigonal_bipyramidal': [
        (1,2,3,4,5),
        (1,2,3,5,4),
        (1,3,2,4,5),
        (1,3,2,5,4),
        (1,4,2,3,5),
        (1,4,2,5,3),
        (1,5,2,3,4),
        (1,5,2,4,3),
        (2,3,1,4,5),
        (2,3,1,5,4),
        (2,4,1,3,5),
        (2,4,1,5,3),
        (2,5,1,3,4),
        (2,5,1,4,3),
        (3,4,1,2,5),
        (3,4,1,5,2),
        (3,5,1,2,4),
        (3,5,1,4,2),
        (4,5,1,2,3),
        (4,5,1,3,2),
    ],
    '5_square_pyramidal': [
        (1,2,3,4,5),
        (1,2,5,4,3),
    ],
    '6_octahedral': [
        (1,2,3,4,5,6),
        (1,2,3,5,4,6),
        (1,2,3,6,4,5),
        (1,3,2,4,5,6),
        (1,3,2,5,4,6),
        (1,3,2,6,4,5),
        (1,4,2,3,5,6),
        (1,4,2,5,3,6),
        (1,4,2,6,3,5),
        (1,5,2,3,4,6),
        (1,5,2,4,3,6),
        (1,5,2,6,3,4),
        (1,6,2,3,4,5),
        (1,6,2,4,3,5),
        (1,6,2,5,3,4),
        (2,1,3,4,5,6),
        (2,1,3,5,4,6),
        (2,1,3,6,4,5),
        (3,1,2,4,5,6),
        (3,1,2,5,4,6),
        (3,1,2,6,4,5),
        (4,1,2,3,5,6),
        (4,1,2,5,3,6),
        (4,1,2,6,3,5),
        (5,1,2,3,4,6),
        (5,1,2,4,3,6),
        (5,1,2,6,3,4),
        (6,1,2,3,4,5),
        (6,1,2,4,3,5),
        (6,1,2,5,3,4),
    ],
    
}

metal_spin_dict = {
    # Lanthanides
    'La': 0, 'Ce': 1, 'Pr': 2, 'Nd': 3, 'Pm': 4, 'Sm': 5, 'Eu': 6, 'Gd': 7, 'Tb': 6, 'Dy': 5,
    'Ho': 4, 'Er': 3, 'Tm': 2, 'Yb': 1, 'Lu': 0,
    # Actinides
    'Ac': 0, 'Th': 0, 'Pa': 0, 'U' : 2, 'Np': 3, 'Pu': 4, 'Am': 6, 'Cm': 7, 'Bk': 6, 'Cf': 5,
    'Es': 4, 'Fm': 3, 'Md': 2, 'No': 0, 'Lr': 0,
    # First row transition metals
    'Sc': 0, 'Ti': 0, 'V' : 0, 'Cr': 3, 'Mn': 5, 'Fe': 4, 'Co': 3, 'Ni': 2, 'Cu': 1, 'Zn': 0, 
    # Second row transition metals 
    'Y' : 0, 'Zr': 0, 'Nb': 0, 'Mo': 0, 'Tc': 2, 'Ru': 4, 'Rh': 2, 'Pd': 0, 'Ag': 0, 'Cd': 0, 
    # Third row transition metals
    'Hf': 0, 'Ta': 0, 'W' : 0, 'Re': 1, 'Os': 0, 'Ir': 0, 'Pt': 0, 'Au': 2, 'Hg': 0,
    # 4th row transition metals
    'Rf': 1, 'Db': 0, 'Sg': 0, 'Bh': 0, 'Hs': 0,
    # Post-transition metals
    'Al': 0,
    'Ga': 0,
    'In': 0, 'Sn': 0,
    'Tl': 0, 'Pb': 0, 'Bi': 0, 
    'Nh': 0, 'Fl': 0, 'Mc': 2, 'Lv': 2,
    # Alkali/earth metals
    'Li': 0, 'Be': 0 , 
    'Na': 0, 'Mg': 0, 
    'K' : 0, 'Ca': 0, 
    'Rb': 0, 'Sr': 0, 
    'Cs': 0, 'Ba': 0, 
    'Fr': 0, 'Ra': 0
}